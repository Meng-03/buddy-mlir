module attributes {gpu.container_module} {
  llvm.func @free(!llvm.ptr)
  llvm.func @malloc(i64) -> !llvm.ptr
  llvm.func @main() {
    %0 = llvm.mlir.constant(2 : index) : i64
    %1 = llvm.mlir.constant(0.000000e+00 : f32) : f32
    %2 = llvm.mlir.constant(2.000000e+00 : f16) : f16
    %3 = llvm.mlir.constant(16 : index) : i64
    %4 = llvm.mlir.constant(32 : index) : i64
    %5 = llvm.mlir.constant(1 : index) : i64
    %6 = llvm.mlir.constant(0 : index) : i64
    // %7 = builtin.unrealized_conversion_cast %6 : i64 to index
    %8 = llvm.mlir.zero : !llvm.ptr
    %9 = llvm.getelementptr %8[256] : (!llvm.ptr) -> !llvm.ptr, f16
    %10 = llvm.ptrtoint %9 : !llvm.ptr to i64
    %11 = llvm.call @malloc(%10) : (i64) -> !llvm.ptr
    %12 = llvm.mlir.undef : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>
    %13 = llvm.insertvalue %11, %12[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %14 = llvm.insertvalue %11, %13[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %15 = llvm.insertvalue %6, %14[2] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %16 = llvm.insertvalue %3, %15[3, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %17 = llvm.insertvalue %3, %16[3, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %18 = llvm.insertvalue %3, %17[4, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %19 = llvm.insertvalue %5, %18[4, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %20 = llvm.mlir.zero : !llvm.ptr
    %21 = llvm.getelementptr %20[256] : (!llvm.ptr) -> !llvm.ptr, f16
    %22 = llvm.ptrtoint %21 : !llvm.ptr to i64
    %23 = llvm.call @malloc(%22) : (i64) -> !llvm.ptr
    %24 = llvm.mlir.undef : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>
    %25 = llvm.insertvalue %23, %24[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %26 = llvm.insertvalue %23, %25[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %27 = llvm.insertvalue %6, %26[2] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %28 = llvm.insertvalue %3, %27[3, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %29 = llvm.insertvalue %3, %28[3, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %30 = llvm.insertvalue %3, %29[4, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %31 = llvm.insertvalue %5, %30[4, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %32 = llvm.mlir.zero : !llvm.ptr
    %33 = llvm.getelementptr %32[256] : (!llvm.ptr) -> !llvm.ptr, f32
    %34 = llvm.ptrtoint %33 : !llvm.ptr to i64
    %35 = llvm.call @malloc(%34) : (i64) -> !llvm.ptr
    %36 = llvm.mlir.undef : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>
    %37 = llvm.insertvalue %35, %36[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %38 = llvm.insertvalue %35, %37[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %39 = llvm.insertvalue %6, %38[2] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %40 = llvm.insertvalue %3, %39[3, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %41 = llvm.insertvalue %3, %40[3, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %42 = llvm.insertvalue %3, %41[4, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %43 = llvm.insertvalue %5, %42[4, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %44 = llvm.alloca %5 x !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> : (i64) -> !llvm.ptr
    llvm.store %19, %44 : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>, !llvm.ptr
    %45 = llvm.alloca %5 x !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> : (i64) -> !llvm.ptr
    llvm.store %31, %45 : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>, !llvm.ptr
    %46 = llvm.alloca %5 x !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> : (i64) -> !llvm.ptr
    llvm.store %43, %46 : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>, !llvm.ptr
    llvm.br ^bb1(%6 : i64)
  ^bb1(%47: i64):  // 2 preds: ^bb0, ^bb5
    // %48 = builtin.unrealized_conversion_cast %47 : index to i64
    %49 = llvm.icmp "slt" %47, %3 : i64
    llvm.cond_br %49, ^bb2, ^bb6
  ^bb2:  // pred: ^bb1
    // %50 = builtin.unrealized_conversion_cast %47 : index to i64
    llvm.br ^bb3(%6 : i64)
  ^bb3(%51: i64):  // 2 preds: ^bb2, ^bb4
    // %52 = builtin.unrealized_conversion_cast %51 : index to i64
    %53 = llvm.icmp "slt" %51, %3 : i64
    llvm.cond_br %53, ^bb4, ^bb5
  ^bb4:  // pred: ^bb3
    // %54 = builtin.unrealized_conversion_cast %51 : index to i64
    %55 = llvm.mul %47, %3  : i64
    %56 = llvm.add %55, %51  : i64
    %57 = llvm.getelementptr %11[%56] : (!llvm.ptr, i64) -> !llvm.ptr, f16
    llvm.store %2, %57 : f16, !llvm.ptr
    %58 = llvm.mul %47, %3  : i64
    %59 = llvm.add %58, %51  : i64
    %60 = llvm.getelementptr %23[%59] : (!llvm.ptr, i64) -> !llvm.ptr, f16
    llvm.store %2, %60 : f16, !llvm.ptr
    %61 = llvm.mul %47, %3  : i64
    %62 = llvm.add %61, %51  : i64
    %63 = llvm.getelementptr %35[%62] : (!llvm.ptr, i64) -> !llvm.ptr, f32
    llvm.store %1, %63 : f32, !llvm.ptr
    %64 = llvm.add %51, %5  : i64
    // %65 = builtin.unrealized_conversion_cast %64 : i64 to index
    llvm.br ^bb3(%64 : i64)
  ^bb5:  // pred: ^bb3
    %66 = llvm.add %47, %5  : i64
    // %67 = builtin.unrealized_conversion_cast %66 : i64 to index
    llvm.br ^bb1(%66 : i64)
  ^bb6:  // pred: ^bb1
    llvm.call @printMemrefF32(%0, %46) : (i64, !llvm.ptr) -> ()
    %68 = llvm.mlir.zero : !llvm.ptr
    %69 = llvm.getelementptr %68[1] : (!llvm.ptr) -> !llvm.ptr, f16
    %70 = llvm.ptrtoint %69 : !llvm.ptr to i64
    llvm.call @mgpuMemHostRegisterMemRef(%0, %44, %70) : (i64, !llvm.ptr, i64) -> ()
    %71 = llvm.mlir.zero : !llvm.ptr
    %72 = llvm.getelementptr %71[1] : (!llvm.ptr) -> !llvm.ptr, f16
    %73 = llvm.ptrtoint %72 : !llvm.ptr to i64
    llvm.call @mgpuMemHostRegisterMemRef(%0, %45, %73) : (i64, !llvm.ptr, i64) -> ()
    %74 = llvm.mlir.zero : !llvm.ptr
    %75 = llvm.getelementptr %74[1] : (!llvm.ptr) -> !llvm.ptr, f32
    %76 = llvm.ptrtoint %75 : !llvm.ptr to i64
    llvm.call @mgpuMemHostRegisterMemRef(%0, %46, %76) : (i64, !llvm.ptr, i64) -> ()
    gpu.launch_func  @kernels::@kernel1 blocks in (%5, %5, %5) threads in (%4, %5, %5) : i64 args(%11 : !llvm.ptr, %11 : !llvm.ptr, %6 : i64, %3 : i64, %3 : i64, %3 : i64, %5 : i64, %23 : !llvm.ptr, %23 : !llvm.ptr, %6 : i64, %3 : i64, %3 : i64, %3 : i64, %5 : i64, %35 : !llvm.ptr, %35 : !llvm.ptr, %6 : i64, %3 : i64, %3 : i64, %3 : i64, %5 : i64)
    llvm.call @printMemrefF32(%0, %46) : (i64, !llvm.ptr) -> ()
    llvm.call @free(%11) : (!llvm.ptr) -> ()
    llvm.call @free(%23) : (!llvm.ptr) -> ()
    llvm.call @free(%35) : (!llvm.ptr) -> ()
    llvm.return
  }
  gpu.binary @kernels  [#gpu.object<#nvvm.target<O = 3, chip = "sm_70">, "P\EDU\BA\01\00\10\00\08\11\00\00\00\00\00\00\02\00\01\01@\00\00\00@\0E\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\00\01\00F\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7FELF\02\01\013\07\00\00\00\00\00\00\00\02\00\BE\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\0B\00\00\00\00\00\00F\05F\00@\00\00\00\00\00@\00\0B\00\01\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00.text.kernel1\00.nv.info.kernel1\00.nv.shared.kernel1\00.nv.constant0.kernel1\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.rel.action\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00kernel1\00.text.kernel1\00.nv.info.kernel1\00.nv.shared.kernel1\00.nv.constant0.kernel1\00_param\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.rel.action\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00:\00\00\00\03\00\0A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00l\00\00\00\03\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\89\00\00\00\03\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\B9\00\00\00\03\00\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\002\00\00\00\12\10\0A\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\04\04\00\00\00\04\F8\00\00\00\0C\81\80\80(\00\04\FC\FF\FF?\00\00\00\04/\08\00\05\00\00\00 \00\00\00\04#\08\00\05\00\00\00\00\00\00\00\04\12\08\00\05\00\00\00\00\00\00\00\04\11\08\00\05\00\00\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00t\00\00\00\04\0A\08\00\02\00\00\00`\01\A8\00\03\19\A8\00\04\17\0C\00\00\00\00\00\14\00\A0\00\00\F0!\00\04\17\0C\00\00\00\00\00\13\00\98\00\00\F0!\00\04\17\0C\00\00\00\00\00\12\00\90\00\00\F0!\00\04\17\0C\00\00\00\00\00\11\00\88\00\00\F0!\00\04\17\0C\00\00\00\00\00\10\00\80\00\00\F0!\00\04\17\0C\00\00\00\00\00\0F\00x\00\00\F0!\00\04\17\0C\00\00\00\00\00\0E\00p\00\00\F0!\00\04\17\0C\00\00\00\00\00\0D\00h\00\00\F0!\00\04\17\0C\00\00\00\00\00\0C\00`v\01\FF\00\0A\00\00\FF\00\8E\07\00\C4\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\05\00\00\00\00\00\00\00\00\00\00\22\0E\00$t\0D\FF\10\00\00\00\FF\00\8E\07\00\E2\0F\00\19x\00\FF\02\00\00\00\05\16\01\00\00\E4\1F\10\19x\02\FF\04\00\00\00\05\16\01\00\00\E4\0F\00\12x\00\00\03\00\00\00\FF\C0\8E\07\00\E4\0F\00\12x\05\05\03\00\00\00\FF\C0\8E\07\00\E2\0F\00$x\08\02\04\00\00\00\FF\00\8E\07\00\E2\0F\04\12x\03\02\01\00\00\00\FF\C0\8E\07\00\E2\0F\00$x\06\00\08\00\00\00\FF\00\8E\07\00\E2\0F\04\19x\04\FF\01\00\00\00\00\16\01\00\00\E2\0F\00$x\0B\00\08\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\02\08\04\00\00\00\05\E2\8E\07\00\C4\0F\00\12x\00\06\08\00\00\00\05\E2\8E\07\00\E2\0F\00$x\07\04\02\00\00\00\03\02\8E\07\00\E2\0F\00\12x\06\02\05\00\00\00\FF\C0\8E\07\00\E4\0F\04\12x\09\02\02\00\00\00\FF\C0\8E\07\00\E2\0F\00$x\00\03\04\00\00\00\00\02\8E\07\00\E4\0F\00$x\02\07\04\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\07\0B\08\00\00\00\06\E2\8E\07\00\E2\0F\00$r\03\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00$x\04\04\08\00\00\00\09\02\8E\07\00\C4\0F\00%x\02\05\10\00\00\00\02\00\8E\07\00\C8\0F\00$r\05\FF\FF\00\00\00\FF\00\8E\07\00\E2\0F\00\11z\1C\02\00h\00\00\FF\08\80\07\00\E2\0F\00$x\00\00\02\00\00\00\FF\00\8E\07\00\E4\0F\00%x\04\07\10\00\00\00\04\00\8E\07\00\E2\0F\00\11z\1D\02\00i\00\00\03\0C\0F\00\00\C6\0F\00%v\0C\00\00Z\00\00\0D\00\8E\07\00\E2\0F\00\11z\1A\04\00v\00\00\FF\10\82\07\00\C8\0F\00\11z\1B\04\00w\00\00\05\14\8F\00\00\E2\0F\00\80y\18\1C\00\00\00\00\00\EB\10\00\00\A8\0E\00\80y\10\0C\00\00\00\00\00\ED\10\00\00\A8\00\00\80y\08\1A\00\00\00\00\00\EB\10\00\00\A8\0E\00\80y\0A\1A\80\00\00\00\00\EB\10\00\00\A8\0E\00\80y\14\1A\10\00\00\00\00\EB\10\00\00\A8\0E\00\80y\16\1A\90\00\00\00\00\EB\10\00\00\A8\0E\00\80y\06\1C\80\00\00\00\00\EB\10\00\00\E8\0E\00\80y\0C\0C\10\00\00\00\00\ED\10\00\00(\1F\00\80y\04\1C\00\01\00\00\00\EB\10\00\00(\0F\00\80y\02\1C\80\01\00\00\00\EB\10\00\00\22\0F\006r\08\10\18\00\00\00\08P\00\00\00\E4O\0C6r\0A\10\18\00\00\00\0A\D0\00\00\00\E4\0F\0C6r\14\10\18\00\00\00\14P\01\00\00\E4\0F\0C6r\16\10\18\00\00\00\16\D0\01\00\00d\0F\006r\08\12\06\00\00\00\08P\00\00\00\E4\8F\0E6r\0A\12\06\00\00\00\0A\D0\00\00\00\E4\0F\0C6r\14\12\06\00\00\00\14P\01\00\00\E4\0F\0C6r\16\12\06\00\00\00\16\D0\01\00\00d\0F\006r\08\0C\04\00\00\00\08P\00\00\00\E4\0F\0F6r\0A\0C\04\00\00\00\0A\D0\00\00\00\E4\0F\0C6r\14\0C\04\00\00\00\14P\01\00\00\E4\0F\0C6r\16\0C\04\00\00\00\16\D0\01\00\00d\0F\006r\08\0E\02\00\00\00\08P\00\00\00d\0F\0E6r\0A\0E\02\00\00\00\0A\D0\00\00\00d\0F\0C6r\14\0E\02\00\00\00\14P\01\00\00d\0F\0C6r\16\0E\02\00\00\00\16\D0\01\00\00h\0F\00\85s\00\1A\00\00\00\00\08\EB\10\00\00\E8\0F\02\85s\00\1A\80\00\00\00\0A\EB\10\00\00\E8\0F\00\85s\00\1A\10\00\00\00\14\EB\10\00\00\E8\0F\00\85s\00\1A\90\00\00\00\16\EB\10\00\00\E2\0F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\B9\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0B\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F9\00\00\00\00\00\00\00\C8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\C8\01\00\00\00\00\00\00\90\00\00\00\00\00\00\00\02\00\00\00\05\00\00\00\08\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00z\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00X\02\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\C8\02\00\00\00\00\00\000\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F8\02\00\00\00\00\00\00\88\01\00\00\00\00\00\00\03\00\00\00\0A\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\AA\00\00\00\0B\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\04\00\00\00\00\00\00\D8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\87\00\00\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00X\05\00\00\00\00\00\00\10\00\00\00\00\00\00\00\03\00\00\00\04\00\00\00\08\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00d\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00hversion 6.0\0A.target sm_70\0A.address_size 64/\00\F4\13isible .entry kernel1(\0A.param .u64\15\00\11_\13\00?_0,\1D\00\08\1F1\1D\00\09\1F2\1D\00\09\1F3\1D\00\09\1F4\1D\00\09\1F5\1D\00\09\1F6\1D\00\09\1F7\1D\00\09\1F8\1D\00\09\1F9\1D\00\09\1F1#\01\0B\0F$\01\0A\1F1%\01\0A\1F1&\01\0A\1F1'\01\0A\1F1(\01\0A\1F1)\01\0A\1F1*\01\0A\1F1+\01\0A\1F1,\01\0A\F3\0920\0A)\0A{\0A.reg .b32 %r<18>;\12\00\10f\12\00Ef<17\12\00\F2\00b64 %rd<4>;\0A\0AldZ\00\22.u\16\00K1, [~\00c];\0Amov[\00\F0$1, 16;\0Awmma.load.a.sync.row.m16n16k16.f16 {%r2, %r3\05\00\104\05\00\105\05\00\106\05\00\107\05\00\108\05\00P9}, [x\00\10]\0E\00-1;\91\00\1D2\91\00(8]\80\00\1Fb\80\00\08!10U\00\111\06\00\01\8D\00\111\8E\00\111\8F\00\111\90\00\111\91\00#17\88\00\1F2\88\00\05\1E3\19\01\195\89\00\1Fc\89\00\02`32 {%f\82\00\10f\81\00\10f\80\00\10f\7F\00\10f~\00\10f}\00\10f\0E\01#f8\81\00\143\81\00\01Z\00'mm`\01\0D[\00\00\04\00P\0A{%f9A\00\01\ED\00\11f\ED\00\11f\ED\00\11f\ED\00\11f\ED\00\11f\ED\00of16},\0A\99\01\16\1F\0AC\01\1E\1F\0A\EC\00\15\03\DF\00\7Fstore.d:\01\05\03\10\01\0F\E2\00\1D\00\8D\00\B0;\0Aret;\0A\0A}\0A\00\00\00\00">]
  llvm.func @printMemrefF32(i64, !llvm.ptr) attributes {sym_visibility = "private"}
  llvm.func @mgpuMemHostRegisterMemRef(i64, !llvm.ptr, i64)
}

