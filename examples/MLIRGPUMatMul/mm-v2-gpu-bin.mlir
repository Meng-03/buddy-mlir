module attributes {gpu.container_module} {
  llvm.func @free(!llvm.ptr)
  llvm.func @malloc(i64) -> !llvm.ptr
  llvm.func @main() {
    %0 = llvm.mlir.constant(0 : index) : i64
    %1 = builtin.unrealized_conversion_cast %0 : i64 to index
    %2 = llvm.mlir.constant(1 : index) : i64
    %3 = builtin.unrealized_conversion_cast %2 : i64 to index
    %4 = llvm.mlir.constant(32 : index) : i64
    %5 = builtin.unrealized_conversion_cast %4 : i64 to index
    %6 = llvm.mlir.constant(0.000000e+00 : f16) : f16
    %7 = llvm.mlir.constant(1.000000e+00 : f16) : f16
    %8 = llvm.mlir.constant(2.000000e+00 : f16) : f16
    %9 = llvm.mlir.constant(2.000000e+00 : f32) : f32
    %10 = llvm.mlir.constant(0.000000e+00 : f32) : f32
    %11 = llvm.mlir.constant(32 : index) : i64
    %12 = llvm.mlir.constant(32 : index) : i64
    %13 = llvm.mlir.constant(1 : index) : i64
    %14 = llvm.mlir.constant(1024 : index) : i64
    %15 = llvm.mlir.zero : !llvm.ptr
    %16 = llvm.getelementptr %15[%14] : (!llvm.ptr, i64) -> !llvm.ptr, f16
    %17 = llvm.ptrtoint %16 : !llvm.ptr to i64
    %18 = llvm.call @malloc(%17) : (i64) -> !llvm.ptr
    %19 = llvm.mlir.undef : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>
    %20 = llvm.insertvalue %18, %19[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %21 = llvm.insertvalue %18, %20[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %22 = llvm.mlir.constant(0 : index) : i64
    %23 = llvm.insertvalue %22, %21[2] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %24 = llvm.insertvalue %11, %23[3, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %25 = llvm.insertvalue %12, %24[3, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %26 = llvm.insertvalue %12, %25[4, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %27 = llvm.insertvalue %13, %26[4, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %28 = llvm.mlir.constant(32 : index) : i64
    %29 = llvm.mlir.constant(32 : index) : i64
    %30 = llvm.mlir.constant(1 : index) : i64
    %31 = llvm.mlir.constant(1024 : index) : i64
    %32 = llvm.mlir.zero : !llvm.ptr
    %33 = llvm.getelementptr %32[%31] : (!llvm.ptr, i64) -> !llvm.ptr, f16
    %34 = llvm.ptrtoint %33 : !llvm.ptr to i64
    %35 = llvm.call @malloc(%34) : (i64) -> !llvm.ptr
    %36 = llvm.mlir.undef : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>
    %37 = llvm.insertvalue %35, %36[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %38 = llvm.insertvalue %35, %37[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %39 = llvm.mlir.constant(0 : index) : i64
    %40 = llvm.insertvalue %39, %38[2] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %41 = llvm.insertvalue %28, %40[3, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %42 = llvm.insertvalue %29, %41[3, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %43 = llvm.insertvalue %29, %42[4, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %44 = llvm.insertvalue %30, %43[4, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %45 = llvm.mlir.constant(32 : index) : i64
    %46 = llvm.mlir.constant(32 : index) : i64
    %47 = llvm.mlir.constant(1 : index) : i64
    %48 = llvm.mlir.constant(1024 : index) : i64
    %49 = llvm.mlir.zero : !llvm.ptr
    %50 = llvm.getelementptr %49[%48] : (!llvm.ptr, i64) -> !llvm.ptr, f32
    %51 = llvm.ptrtoint %50 : !llvm.ptr to i64
    %52 = llvm.call @malloc(%51) : (i64) -> !llvm.ptr
    %53 = llvm.mlir.undef : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>
    %54 = llvm.insertvalue %52, %53[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %55 = llvm.insertvalue %52, %54[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %56 = llvm.mlir.constant(0 : index) : i64
    %57 = llvm.insertvalue %56, %55[2] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %58 = llvm.insertvalue %45, %57[3, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %59 = llvm.insertvalue %46, %58[3, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %60 = llvm.insertvalue %46, %59[4, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %61 = llvm.insertvalue %47, %60[4, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %62 = llvm.mlir.constant(1 : index) : i64
    %63 = llvm.alloca %62 x !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> : (i64) -> !llvm.ptr
    llvm.store %27, %63 : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>, !llvm.ptr
    %64 = llvm.mlir.constant(2 : index) : i64
    %65 = llvm.mlir.undef : !llvm.struct<(i64, ptr)>
    %66 = llvm.insertvalue %64, %65[0] : !llvm.struct<(i64, ptr)> 
    %67 = llvm.insertvalue %63, %66[1] : !llvm.struct<(i64, ptr)> 
    %68 = llvm.mlir.constant(1 : index) : i64
    %69 = llvm.alloca %68 x !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> : (i64) -> !llvm.ptr
    llvm.store %44, %69 : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>, !llvm.ptr
    %70 = llvm.mlir.constant(2 : index) : i64
    %71 = llvm.mlir.undef : !llvm.struct<(i64, ptr)>
    %72 = llvm.insertvalue %70, %71[0] : !llvm.struct<(i64, ptr)> 
    %73 = llvm.insertvalue %69, %72[1] : !llvm.struct<(i64, ptr)> 
    %74 = llvm.mlir.constant(1 : index) : i64
    %75 = llvm.alloca %74 x !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> : (i64) -> !llvm.ptr
    llvm.store %61, %75 : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)>, !llvm.ptr
    %76 = llvm.mlir.constant(2 : index) : i64
    %77 = llvm.mlir.undef : !llvm.struct<(i64, ptr)>
    %78 = llvm.insertvalue %76, %77[0] : !llvm.struct<(i64, ptr)> 
    %79 = llvm.insertvalue %75, %78[1] : !llvm.struct<(i64, ptr)> 
    scf.for %arg0 = %1 to %5 step %3 {
      %123 = builtin.unrealized_conversion_cast %arg0 : index to i64
      scf.for %arg1 = %1 to %5 step %3 {
        %124 = builtin.unrealized_conversion_cast %arg1 : index to i64
        %125 = llvm.extractvalue %27[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
        %126 = llvm.mlir.constant(32 : index) : i64
        %127 = llvm.mul %123, %126  : i64
        %128 = llvm.add %127, %124  : i64
        %129 = llvm.getelementptr %125[%128] : (!llvm.ptr, i64) -> !llvm.ptr, f16
        llvm.store %8, %129 : f16, !llvm.ptr
        %130 = llvm.extractvalue %44[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
        %131 = llvm.mlir.constant(32 : index) : i64
        %132 = llvm.mul %123, %131  : i64
        %133 = llvm.add %132, %124  : i64
        %134 = llvm.getelementptr %130[%133] : (!llvm.ptr, i64) -> !llvm.ptr, f16
        llvm.store %8, %134 : f16, !llvm.ptr
        %135 = llvm.extractvalue %61[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
        %136 = llvm.mlir.constant(32 : index) : i64
        %137 = llvm.mul %123, %136  : i64
        %138 = llvm.add %137, %124  : i64
        %139 = llvm.getelementptr %135[%138] : (!llvm.ptr, i64) -> !llvm.ptr, f32
        llvm.store %10, %139 : f32, !llvm.ptr
      }
    }
    %80 = llvm.extractvalue %79[0] : !llvm.struct<(i64, ptr)> 
    %81 = llvm.extractvalue %79[1] : !llvm.struct<(i64, ptr)> 
    llvm.call @printMemrefF32(%80, %81) : (i64, !llvm.ptr) -> ()
    %82 = llvm.mlir.zero : !llvm.ptr
    %83 = llvm.getelementptr %82[1] : (!llvm.ptr) -> !llvm.ptr, f16
    %84 = llvm.ptrtoint %83 : !llvm.ptr to i64
    %85 = llvm.extractvalue %67[0] : !llvm.struct<(i64, ptr)> 
    %86 = llvm.extractvalue %67[1] : !llvm.struct<(i64, ptr)> 
    llvm.call @mgpuMemHostRegisterMemRef(%85, %86, %84) : (i64, !llvm.ptr, i64) -> ()
    %87 = llvm.mlir.zero : !llvm.ptr
    %88 = llvm.getelementptr %87[1] : (!llvm.ptr) -> !llvm.ptr, f16
    %89 = llvm.ptrtoint %88 : !llvm.ptr to i64
    %90 = llvm.extractvalue %73[0] : !llvm.struct<(i64, ptr)> 
    %91 = llvm.extractvalue %73[1] : !llvm.struct<(i64, ptr)> 
    llvm.call @mgpuMemHostRegisterMemRef(%90, %91, %89) : (i64, !llvm.ptr, i64) -> ()
    %92 = llvm.mlir.zero : !llvm.ptr
    %93 = llvm.getelementptr %92[1] : (!llvm.ptr) -> !llvm.ptr, f32
    %94 = llvm.ptrtoint %93 : !llvm.ptr to i64
    %95 = llvm.extractvalue %79[0] : !llvm.struct<(i64, ptr)> 
    %96 = llvm.extractvalue %79[1] : !llvm.struct<(i64, ptr)> 
    llvm.call @mgpuMemHostRegisterMemRef(%95, %96, %94) : (i64, !llvm.ptr, i64) -> ()
    %97 = llvm.extractvalue %27[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %98 = llvm.extractvalue %27[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %99 = llvm.extractvalue %27[2] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %100 = llvm.extractvalue %27[3, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %101 = llvm.extractvalue %27[3, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %102 = llvm.extractvalue %27[4, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %103 = llvm.extractvalue %27[4, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %104 = llvm.extractvalue %44[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %105 = llvm.extractvalue %44[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %106 = llvm.extractvalue %44[2] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %107 = llvm.extractvalue %44[3, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %108 = llvm.extractvalue %44[3, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %109 = llvm.extractvalue %44[4, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %110 = llvm.extractvalue %44[4, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %111 = llvm.extractvalue %61[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %112 = llvm.extractvalue %61[1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %113 = llvm.extractvalue %61[2] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %114 = llvm.extractvalue %61[3, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %115 = llvm.extractvalue %61[3, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %116 = llvm.extractvalue %61[4, 0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    %117 = llvm.extractvalue %61[4, 1] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    gpu.launch_func  @kernels::@kernel1 blocks in (%2, %2, %2) threads in (%4, %2, %2) : i64 args(%97 : !llvm.ptr, %98 : !llvm.ptr, %99 : i64, %100 : i64, %101 : i64, %102 : i64, %103 : i64, %104 : !llvm.ptr, %105 : !llvm.ptr, %106 : i64, %107 : i64, %108 : i64, %109 : i64, %110 : i64, %111 : !llvm.ptr, %112 : !llvm.ptr, %113 : i64, %114 : i64, %115 : i64, %116 : i64, %117 : i64)
    %118 = llvm.extractvalue %79[0] : !llvm.struct<(i64, ptr)> 
    %119 = llvm.extractvalue %79[1] : !llvm.struct<(i64, ptr)> 
    llvm.call @printMemrefF32(%118, %119) : (i64, !llvm.ptr) -> ()
    %120 = llvm.extractvalue %27[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    llvm.call @free(%120) : (!llvm.ptr) -> ()
    %121 = llvm.extractvalue %44[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    llvm.call @free(%121) : (!llvm.ptr) -> ()
    %122 = llvm.extractvalue %61[0] : !llvm.struct<(ptr, ptr, i64, array<2 x i64>, array<2 x i64>)> 
    llvm.call @free(%122) : (!llvm.ptr) -> ()
    llvm.return
  }
  gpu.binary @kernels  [#gpu.object<#nvvm.target<O = 3, chip = "sm_70">, "P\EDU\BA\01\00\10\00@\14\00\00\00\00\00\00\02\00\01\01@\00\00\00\C0\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\00\01\00F\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7FELF\02\01\013\07\00\00\00\00\00\00\00\02\00\BE\00t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0E\00\00\00\00\00\00F\05F\00@\00\00\00\00\00@\00\0B\00\01\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00.text.kernel1\00.nv.info.kernel1\00.nv.shared.kernel1\00.nv.constant0.kernel1\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.rel.action\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00kernel1\00.text.kernel1\00.nv.info.kernel1\00.nv.shared.kernel1\00.nv.constant0.kernel1\00_param\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.rel.action\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00:\00\00\00\03\00\0A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00l\00\00\00\03\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\89\00\00\00\03\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\B9\00\00\00\03\00\07\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\002\00\00\00\12\10\0A\00\00\00\00\00\00\00\00\00\80\06\00\00\00\00\00\00\FF\FF\FF\FF(\00\00\00\00\00\00\00\FF\FF\FF\FF\FF\FF\FF\FF\03\00\04|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00p\06\00\00\00\00\00\00\04\04\00\00\00\04\8C\01\00\00\0C\81\80\80(\00\04\FC\FF\FF?\00\00\00\04/\08\00\05\00\00\00\1E\00\00\00\04#\08\00\05\00\00\00\00\00\00\00\04\12\08\00\05\00\00\00\00\00\00\00\04\11\08\00\05\00\00\00\00\00\00\00\046\04\00\01\00\00\00\047\04\00t\00\00\00\04\0A\08\00\02\00\00\00`\01\A8\00\03\19\A8\00\04\17\0C\00\00\00\00\00\14\00\A0\00\00\F0!\00\04\17\0C\00\00\00\00\00\13\00\98\00\00\F0!\00\04\17\0C\00\00\00\00\00\12\00\90\00\00\F0!\00\04\17\0C\00\00\00\00\00\11\00\88\00\00\F0!\00\04\17\0C\00\00\00\00\00\10\00\80\00\00\F0!\00\04\17\0C\00\00\00\00\00\0F\00x\00\00\F0!\00\04\17\0C\00\00\00\00\00\0E\00p\00\00\F0!\00\04\17\0C\00\00\00\00\00\0D\00h\00\00\F0!\00\04\17\0C\00\00\00\00\00\0C\00`v\01\FF\00\0A\00\00\FF\00\8E\07\00\C4\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\05\00\00\00\00\00\00\00\00\00\00\22\0E\00$r\19\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00$t\10\FF \00\00\00\FF\00\8E\07\00\E2\0F\00\19x\02\FF\04\00\00\00\05\16\01\00\00\E4\1F\10\19x\00\FF\02\00\00\00\05\16\01\00\00\E4\0F\00\12x\05\05\03\00\00\00\FF\C0\8E\07\00\E2\0F\00$x\06\02\04\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\00\00\03\00\00\00\FF\C0\8E\07\00\C4\0F\00\12x\03\02\01\00\00\00\FF\C0\8E\07\00\E4\0F\00\12x\06\06\04\00\00\00\05\E2\8E\07\00\E2\0F\10$x\02\00\08\00\00\00\FF\00\8E\07\00\E2\0F\04\19x\04\FF\01\00\00\00\00\16\01\00\00\E2\0F\00$x\09\00\08\00\00\00\FF\00\8E\07\00\E2\0F\00\12x\07\06\02\00\00\00\FF\C0\8E\07\00\E4\0F\00\12x\00\02\08\00\00\00\05\E2\8E\07\00\E4\0F\00\12x\06\06\05\00\00\00\FF\C0\8E\07\00\E2\0F\00$x\02\04\08\00\00\00\07\02\8E\07\00\C4\0F\00$x\04\04\02\00\00\00\03\02\8E\07\00\E2\0F\00\12x\07\09\08\00\00\00\06\E2\8E\07\00\E2\0F\00$x\00\03\04\00\00\00\00\02\8E\07\00\E4\0F\00$x\18\04\04\00\00\00\FF\00\8E\07\00\E4\0F\00$r\03\FF\FF\00\00\00\FF\00\8E\07\00\E4\0F\00%x\18\05 \00\00\00\18\00\8E\07\00\C8\0F\00%x\02\07 \00\00\00\02\00\8E\07\00\E2\0F\00\11z\12\18\00h\00\00\FF\08\80\07\00\C6\0F\00$x\00\00\02\00\00\00\FF\00\8E\07\00\E2\0F\00\11z\1A\02\00v\00\00\FF\10\82\07\00\E4\0F\00\11z\13\18\00i\00\00\19\0C\0F\00\00\E2\0F\00%v\0C\00\00Z\00\00\10\00\8E\07\00\E2\0F\00\11z\1B\02\00w\00\00\03\14\8F\00\00\CC\0F\00\80y\02\12\00\00\00\00\00\EB\10\00\00\A8\0E\00\80y\04\0C\00\00\00\00\00\ED\10\00\00\A8\00\00\80y\14\1A\00\00\00\00\00\EB\10\00\00\A8\0E\00\80y\16\1A\00\01\00\00\00\EB\10\00\00\A8\0E\00\80y\08\1A\10\00\00\00\00\EB\10\00\00\A8\0E\00\80y\0A\1A\10\01\00\00\00\EB\10\00\00\A8\0E\00\80y\0C\0C\10\00\00\00\00\ED\10\00\00\E2\1E\006r\14\04\02\00\00\00\14P\00\00\00\E4O\0C6r\16\04\02\00\00\00\16\D0\00\00\00\E4\0F\0C6r\08\04\02\00\00\00\08P\01\00\00\E4\0F\0C6r\0A\04\02\00\00\00\0A\D0\01\00\00d\0B\00\80y\04\12\00\01\00\00\00\EB\10\00\00\A8\00\02\80y\02\12\00\02\00\00\00\EB\10\00\00\E8\00\00\80y\12\12\00\03\00\00\00\EB\10\00\00\22\1F\006r\14\06\04\00\00\00\14P\00\00\00\E4O\0C6r\16\06\04\00\00\00\16\D0\00\00\00\E4\0F\0C6r\08\06\04\00\00\00\08P\01\00\00\E4\0F\0C6r\0A\06\04\00\00\00\0A\D0\01\00\00d\0B\00$v\05\FF\00h\00\00\FF\00\8E\07\00\E2\0F\026r\14\0C\02\00\00\00\14P\00\00\00\E4\8F\0C6r\16\0C\02\00\00\00\16\D0\00\00\00\E4\0F\0C6r\08\0C\02\00\00\00\08P\01\00\00\E2\0F\0C\10x\05\05\00\04\00\00\FF\E0\F3\07\00\E2\0F\006r\0A\0C\02\00\00\00\0A\D0\01\00\00d\0B\00\10z\0C\10\00Z\00\00\FF\E0\F1\07\00\E2\0F\026r\14\0E\12\00\00\00\14P\00\00\00b\0F\0D$v\03\FF\00i\00\00\FF\06\8E\00\00\E2\0F\006r\16\0E\12\00\00\00\16\D0\00\00\00d\0F\0C$v\0D\FF\00[\00\00\FF\06\0E\00\00\E2\0F\006r\10\0E\12\00\00\00\08P\01\00\00b\0F\0C\11r\04\18\05\00\00\00\FF\08\80\07\00\E2\0F\006r\12\0E\12\00\00\00\0A\D0\01\00\00b\0F\00%x\0C\00 \00\00\00\0C\00\8E\07\00\C4\0F\00\11r\05\18\03\00\00\00\19\0C\0F\00\00\E2\0F\00\85s\00\1A\00\00\00\00\14\EB\10\00\00\E8\01\02\85s\00\1A\00\01\00\00\16\EB\10\00\00\E8\03\00\85s\00\1A\10\00\00\00\10\EB\10\00\00\E8\05\00\85s\00\1A\10\01\00\00\12\EB\10\00\00\E8\07\00\80y\14\1A\00\00\00\00\00\EB\10\00\00\E8\1E\00\80y\18\04\00\00\00\00\00\EB\10\00\00\E8\00\00\80y\08\0C\00\00\00\00\00\ED\10\00\00\E8\08\00\80y\16\1A\00\01\00\00\00\EB\10\00\00\E8.\00\80y\10\1A\10\00\00\00\00\EB\10\00\00\E8N\00\80y\06\04\00\01\00\00\00\EB\10\00\00\A8\00\00\80y\02\04\00\02\00\00\00\EB\10\00\00\A8\00\00\80y\0C\0C\10\00\00\00\00\ED\10\00\00(\0F\01\80y\04\04\00\03\00\00\00\EB\10\00\00\22\1F\006r\14\08\18\00\00\00\14P\00\00\00\E4\8F\0C6r\16\08\18\00\00\00\16\D0\00\00\00\E4\0F\0C6r\10\08\18\00\00\00\10P\01\00\00\E4\0F\0C6r\12\08\18\00\00\00\12\D0\01\00\00d\0F\006r\14\0A\06\00\00\00\14P\00\00\00\E4O\0E6r\16\0A\06\00\00\00\16\D0\00\00\00\E4\0F\0C6r\10\0A\06\00\00\00\10P\01\00\00\E4\0F\0C6r\12\0A\06\00\00\00\12\D0\01\00\00d\0F\006r\14\0C\02\00\00\00\14P\00\00\00\E4\0F\0F6r\16\0C\02\00\00\00\16\D0\00\00\00\E4\0F\0C6r\10\0C\02\00\00\00\10P\01\00\00\E4\0F\0C6r\12\0C\02\00\00\00\12\D0\01\00\00d\0F\006r\14\0E\04\00\00\00\14P\00\00\00d\0F\0E6r\16\0E\04\00\00\00\16\D0\00\00\00d\0F\0C6r\10\0E\04\00\00\00\10P\01\00\00d\0F\0C6r\12\0E\04\00\00\00\12\D0\01\00\00h\0F\00\85s\00\1A\00\00\00\00\14\EB\10\00\00\E8\0F\02\85s\00\1A\00\01\00\00\16\EB\10\00\00\E8\0F\00\85s\00\1A\10\00\00\00\10\EB\10\00\00\E8\0F\00\85s\00\1A\10\01\00\00\12\EB\10\00\00\E2\0F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18yz\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00X\02\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\C8\02\00\00\00\00\00\000\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\F8\02\00\00\00\00\00\00\88\01\00\00\00\00\00\00\03\00\00\00\0A\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\AA\00\00\00\0B\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\04\00\00\00\00\00\00\D8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\87\00\00\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00X\05\00\00\00\00\00\00\10\00\00\00\00\00\00\00\03\00\00\00\04\00\00\00\08\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00d\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00hversion 6.0\0A.target sm_70\0A.address_size 64/\00\F4\13isible .entry kernel1(\0A.param .u64\15\00\11_\13\00?_0,\1D\00\08\1F1\1D\00\09\1F2\1D\00\09\1F3\1D\00\09\1F4\1D\00\09\1F5\1D\00\09\1F6\1D\00\09\1F7\1D\00\09\1F8\1D\00\09\1F9\1D\00\09\1F1#\01\0B\0F$\01\0A\1F1%\01\0A\1F1&\01\0A\1F1'\01\0A\1F1(\01\0A\1F1)\01\0A\1F1*\01\0A\1F1+\01\0A\1F1,\01\0A\F3\0920\0A)\0A{\0A.reg .b32 %r<34>;\12\00\10f\12\00Ef<33\12\00\80b64 %rd<$\002\0AldZ\00\22.u\16\00K1, [~\00c];\0Amov[\00\F0$1, 32;\0Awmma.load.a.sync.row.m16n16k16.f16 {%r2, %r3\05\00\104\05\00\105\05\00\106\05\00\107\05\00\108\05\00P9}, [x\00\10]\0E\00-1;\91\00\1D2\91\00(8]\80\00\1Fb\80\00\08!10U\00\111\06\00\01\8D\00\111\8E\00\111\8F\00\111\90\00\111\91\00#17\88\00\1F2\88\00\05\1E3\19\01\195\89\00\1Fc\89\00\02`32 {%f\82\00\10f\81\00\10f\80\00\10f\7F\00\10f~\00\10f}\00\10f\0E\01#f8\81\00\143\81\00\01Z\00'mm`\01\0D[\00\00\04\00P\0A{%f9A\00\01\ED\00\11f\ED\00\11f\ED\00\11f\ED\00\11f\ED\00\11f\ED\00of16},\0A\99\01\16\1F\0AC\01\1E\1F\0A\EC\00\15\03\DF\00\7Fstore.d:\01\05\03\10\01\0F\E2\00\1D\07@\01\0F\A3\02\0E\111\ED\00\101`\00!r2\EC\00!21\06\00\112\06\00\113\06\00\114\06\00\135\A2\0151+3&\02\0F\88\02\13\112!\01\112]\01\112q\00\112q\00\113q\00\113q\00\113q\00#33e\00n2+1024g\00\0Ff\02\0A\01]\01\01\D2\00\11f\D2\00\11f\D2\00\11f\D2\00\11f\D2\00\11f\D2\00?f24n\02(\112i\01\01\D4\00\11f\D4\00\11f\D4\00\11f\D4\00\11f\D4\00\11f\D4\003f32E\02\0Fe\01\1A\1F\0A2\01\1E\1F\0A\FD\00\1D\0F\7F\02\1A\0F\F3\00\1E\02R\01\90ret;\0A\0A}\0A\00\00\00\00\00\00\00">]
  llvm.func @printMemrefF32(i64, !llvm.ptr) attributes {sym_visibility = "private"}
  llvm.func @mgpuMemHostRegisterMemRef(i64, !llvm.ptr, i64)
}

